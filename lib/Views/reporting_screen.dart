import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../Services/pos_service.dart';

class ReportingScreen extends StatefulWidget {
  const ReportingScreen({super.key});

  @override
  State<ReportingScreen> createState() => _ReportingScreenState();
}

class _ReportingScreenState extends State<ReportingScreen> {
  DateTime _selectedDate = DateTime.now();

  String get _dateStr => _selectedDate.toIso8601String().split('T').first;

  Future<void> _refreshReports(BuildContext context) async {
    final pos = Provider.of<PosService>(context, listen: false);
    await pos.fetchSalesReport();
    await pos.fetchDailySalesReport(_dateStr);
    await pos.fetchTaxReport(_dateStr);
  }

  @override
  void initState() {
    super.initState();
    WidgetsBinding.instance.addPostFrameCallback((_) {
      _refreshReports(context);
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Sales and Tax Reports'),
        backgroundColor: Colors.deepOrange,
        actions: [
          IconButton(
            tooltip: 'Pick Date',
            icon: const Icon(Icons.calendar_month),
            onPressed: () async {
              final picked = await showDatePicker(
                context: context,
                initialDate: _selectedDate,
                firstDate: DateTime(2020),
                lastDate: DateTime.now().add(const Duration(days: 365)),
              );
              if (picked != null) {
                setState(() => _selectedDate = picked);
                await _refreshReports(context);
              }
            },
          ),
          IconButton(
            tooltip: 'Refresh',
            icon: const Icon(Icons.refresh),
            onPressed: () => _refreshReports(context),
          ),
        ],
      ),
      body: RefreshIndicator(
        onRefresh: () => _refreshReports(context),
        child: Consumer<PosService>(
          builder: (context, posService, child) {
            return ListView(
              padding: const EdgeInsets.all(16.0),
              children: [
                // Overall Sales Report
                Card(
                  elevation: 4,
                  child: Padding(
                    padding: const EdgeInsets.all(16.0),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        const Text(
                          'Overall Sales Summary',
                          style: TextStyle(
                            fontSize: 18,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        const SizedBox(height: 8),
                        if (posService.salesReport == null)
                          const Text('Loading overall sales...')
                        else ...[
                          Text(
                            'Total Invoices: ${posService.salesReport!['total_invoices']}',
                          ),
                          Text(
                            'Total Sales: K${posService.salesReport!['total_sales'].toStringAsFixed(2)}',
                          ),
                          Text(
                            'Total Tax: K${posService.salesReport!['total_tax'].toStringAsFixed(2)}',
                          ),
                          Text(
                            'Generated By: ${posService.salesReport!['generated_by']}',
                          ),
                        ],
                      ],
                    ),
                  ),
                ),
                const SizedBox(height: 16),
                // Daily Sales Report
                Card(
                  elevation: 4,
                  child: Padding(
                    padding: const EdgeInsets.all(16.0),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          'Daily Sales Report (${_dateStr})',
                          style: const TextStyle(
                            fontSize: 18,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        const SizedBox(height: 8),
                        if (posService.dailySalesReport == null)
                          const Text('Loading daily sales...')
                        else ...[
                          Text(
                            'Total Sales: K${posService.dailySalesReport!['total_sales'].toStringAsFixed(2)}',
                          ),
                          const SizedBox(height: 8),
                          ...posService.dailySalesReport!['orders']
                              .map<Widget>(
                                (order) => Text(
                                  'Order ID: ${order['id']}, Product: ${order['product_id']}, Qty: ${order['quantity']}, Total: K${order['total_price'].toStringAsFixed(2)}',
                                ),
                              )
                              .toList(),
                        ],
                      ],
                    ),
                  ),
                ),
                const SizedBox(height: 16),
                // Tax Report
                Card(
                  elevation: 4,
                  child: Padding(
                    padding: const EdgeInsets.all(16.0),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Text(
                          'Tax Report (${_dateStr})',
                          style: const TextStyle(
                            fontSize: 18,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        const SizedBox(height: 8),
                        if (posService.taxReport == null)
                          const Text('Loading tax report...')
                        else ...[
                          Text(
                            'Total Tax: K${posService.taxReport!['total_tax'].toStringAsFixed(2)}',
                          ),
                          const SizedBox(height: 8),
                          ...posService.taxReport!['invoices']
                              .map<Widget>(
                                (invoice) => Text(
                                  'Invoice ID: ${invoice['id']}, CIS No: ${invoice['cis_invc_no']}, Total: K${invoice['total_amount'].toStringAsFixed(2)}, Tax: K${invoice['tax_amount'].toStringAsFixed(2)}',
                                ),
                              )
                              .toList(),
                        ],
                      ],
                    ),
                  ),
                ),
              ],
            );
          },
        ),
      ),
    );
  }
}
